#!/usr/bin/env ansible-playbook
---
- name: Determine if we have PVC clean-up to do
  become: false
  connection: local
  hosts: localhost
  gather_facts: false
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
    pvc_cleanup: false
    image_cleanup_namespace: "openshift-virtualization-os-images"
  tasks:
    - name: Find default storageclass
      ansible.builtin.shell: |
        oc get storageclass -o json | jq -r '.items[] | select(.metadata.annotations."storageclass.kubernetes.io/is-default-class")'
      register: default_sc_output
      changed_when: false

    - name: Find virtualization default storageclass
      ansible.builtin.shell: |
        oc get storageclass -o json | jq -r '.items[] | select(.metadata.annotations."storageclass.kubevirt.io/is-default-virt-class")'
      register: default_virt_sc_output
      changed_when: false

    - name: Trap errors
      block:

        - name: Parse results
          ansible.builtin.set_fact:
            default_sc: '{{ default_sc_output.stdout | from_json }}'
            default_virt_sc: '{{ default_virt_sc_output.stdout | from_json }}'

        - name: Commit to PVC cleanup
          ansible.builtin.set_fact:
            pvc_cleanup: true
          when: default_sc.metadata.name != default_virt_sc.metadata.name

        - name: Find PVCs
          kubernetes.core.k8s_info:
            kind: pvc
            namespace: '{{ image_cleanup_namespace }}'
          register: pvc_cleanup_list
          when: pvc_cleanup

        - name: Remove stray PVCs
          kubernetes.core.k8s:
            kind: pvc
            namespace: '{{ image_cleanup_namespace }}'
            name: '{{ item.metadata.name }}'
            state: absent
          loop: "{{ pvc_cleanup_list.resources }}"
          when: pvc_cleanup
      rescue:
        - name: Note that we exited
          ansible.builtin.debug:
            msg: "Caught an error, exiting"

    #    - name: Perform the PVC cleanup
    #      when: pvc_cleanup
    #      block:
    #        - name: Remove PVCs
    #          ansible.builtin.k8s:
    #            kind: PVC
    #            namespace: openshift-virtualization-os-images
    #            state: absent
