#!/usr/bin/env ansible-playbook
---
- name: Prepare a secret to allow connection to cluster Vault
  become: false
  connection: local
  hosts: localhost
  gather_facts: false
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
    vault_secret_ns: imperative
    vault_url: https://vault.vault.svc:8200
    vault_secret_name: vaultkeys
    vault_secret_field: vault_data_json
    vault_ca_ns: vault
    vault_ca_configmap: openshift-service-ca.crt
    vault_ca_configmap_field: service-ca.crt
    aap_ns: ansible-automation-platform
    aap_secret_name: vault-info
  tasks:
    - name: Get CA for Vault
      kubernetes.core.k8s_info:
        kind: ConfigMap
        name: "{{ vault_ca_configmap }}"
        namespace: "{{ vault_ca_ns }}"
      register: vault_ca

    - name: Get CA data
      ansible.builtin.set_fact:
        vault_ca: "{{ vault_ca.resources[0].data[vault_ca_configmap_field] }}"

    - name: Get vaultkeys from imperative
      kubernetes.core.k8s_info:
        kind: Secret
        name: "{{ vault_secret_name }}"
        namespace: "{{ vault_secret_ns }}"
      register: vault_secret

    - name: Retrieve vault data
      ansible.builtin.set_fact:
        vault_data: "{{ vault_secret.resources[0].data[vault_secret_field] | b64decode | from_json }}"

    - name: Get root token
      ansible.builtin.set_fact:
        vault_root_token: "{{ vault_data.root_token }}"

    - name: Manage Secret for vault config
      kubernetes.core.k8s:
        state: present
        definition:
          metadata:
            name: "{{ aap_secret_name }}"
            namespace: "{{ aap_ns }}"
          kind: Secret
          type: Opaque
          stringData:
            vault_root_token: "{{ vault_data.root_token }}"
            vault_ca: "{{ vault_ca }}"
            vault_url: "{{ vault_url }}"
